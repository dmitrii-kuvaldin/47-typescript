import { useFormik } from 'formik';
import { useState } from 'react';
import * as Yup from 'yup';
import styles from './genderForm.module.css';

// –æ–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –æ–±—ä–µ–∫—Ç–µ –∏–∑ input –∏–∑ —Ñ–æ—Ä–º—ã
interface IFormGender {
  client: string;
}

// –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ–±—ä–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å API —Å —Å–µ—Ä–≤–µ—Ä–∞
interface IFormData {
  count: number;
  gender: string;
  name: string;
  probability: number;
}

const schema = Yup.object().shape({
  client: Yup
    .string()
    .required('–≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ üòë')
    .required('–±–µ–∑ –∏–º–µ–Ω–∏ –Ω–µ—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è üò•')
    .min(2, '—Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–º—è üôÖ‚Äç‚ôÇÔ∏è')
    .max(15, '—Å–æ–º–Ω–µ–≤–∞–µ–º—Å—è —á—Ç–æ —É –≤–∞—Å —Ç–∞–∫–æ–µ –¥–ª–∏–Ω–Ω–æ–µ –∏–º—è...')
});

const GenderForm = () => {

  const [genderData, setGenderData] = useState<IFormData>({
    gender: '',
    name: '',
    count: 0,
    probability: 0,
  });

  const fetchGender = async (client: string) => {
    const res = await fetch(`https://api.genderize.io/?name=${client}`);
    const data = await res.json();
    setGenderData(data);
  };

  const formik = useFormik({
    initialValues: {
      client: ''
    } as IFormGender,
    validationSchema: schema,
    validateOnChange: false,
    onSubmit: (values: IFormGender, { resetForm }) => {
      // –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API —á–µ—Ä–µ–∑ —Å–æ–∑–¥–∞–Ω–Ω—É—é –≤—ã—à–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
      fetchGender(values.client);
      resetForm();
    }
  });


  return (
    <div className='lesson-container'>
      <form onSubmit={formik.handleSubmit} className={styles.genderForm}>
        {/* –º—ã —É–≤–∏–¥–∏–º —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ formik.errors.client –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ  */}
        {formik.errors.client && (
          <div className={styles.error}>{formik.errors.client}</div>
        )}
        <label htmlFor="">‚ú® Know your gender üîÆ</label>
        <input value={formik.values.client} onChange={formik.handleChange} name='client' placeholder='type your name to analyze' type="text" />
        <button type="submit">send request</button>
      </form>
      {genderData.name && (
        <p className={styles.genderOutput}>{genderData.name} is {genderData.gender === 'male' ? 'üíÅ‚Äç‚ôÇÔ∏è' : 'üíÅ‚Äç‚ôÄÔ∏è'} {genderData.probability * 100}%</p>
      )}
    </div>
  );
};

export default GenderForm;
